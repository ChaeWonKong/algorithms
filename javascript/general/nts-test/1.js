/*
복리법은 전 단계까지의 원리합계에 대해서 이율을 적용하는 방법입니다. 
다음은 원금 100만 원에 월 이율 10%로 복리법을 적용한 경우를 나타내는 표입니다.

복리 계산
원금	1,000,000원
1달 후	1,000,000원 + 1,000,000 x 0.1 = 1,100,000원
2달 후	1,100,000원 + 1,100,000 x 0.1 = 1,210,000원
3달 후	1,210,000원 + 1,210,000 x 0.1 = 1,331,000원
...	...
m달 후	1,000,000 x (1 + 0.1)m 원
복리법을 적용하여 원금 p 원이 m 달 후에 d 원 이상이 되도록 하는 최소 월 이율 k% 를 찾으려고 합니다(단, k는 가능한 k 값 중 가장 작은 정수).
원금 p, 달의 수 m, 목표 금액 d가 매개변수로 주어질 때, 
복리법을 적용하여 원금 p 원이 m 달 후에 d 원 이상이 되도록 하는 최소 월 이율 k%를 return 하도록 solution 함수를 완성해주세요. 
단, 매달 이자는 소수점 이하를 버린 값이 더해진다고 가정합니다.

제한사항
원금 p는 1,000,000 이상 1,000,000,000 이하의 자연수이며, 100만 단위로만 주어집니다.
목표 달 m은 1 이상 20 이하의 자연수입니다.
목표 금액 d는 1,000,000 이상 1,000,000,000 이하의 자연수(p ≤ d ≤ p*2m ) 이며, 100만 단위로만 주어집니다.
k로 가능한 값 중 가장 작은 정수를 return 하면 됩니다.
입출력 예
p	m	d	result
10000000	9	13000000	3
1000000	3	1000000	0
입출력 예 설명
입출력 예 #1

매달 이율이 적어도 3% 이상이면 다음과 같이 9달 후 목표 금액을 넘을 수 있습니다.

복리 계산
원금	10,000,000 원
1달 후	10,000,000 x (1 + 0.03) = 10,300,000원
2달 후	10,300,000 x (1 + 0.03) = 10,609,000원
3달 후	10,609,000 x (1 + 0.03) = 10,927,270원
4달 후	10,927,270 x (1 + 0.03) = 11,255,088 .1 원 (소수 버림)
5달 후	11,255,088 x (1 + 0.03) = 11,592,740 .64 원(소수 버림)
...	...
9달 후	12,667,699 x (1 + 0.03) = 13,047,729 .97 원(소수 버림)
입출력 예 #2

매달 이율이 0%여도 목표 금액에 도달 가능합니다.
*/

function solution(p, m, d) {
  let k = 0;
  let s = 0;
  function calc(p, m, k) {
    interest = k / 100 + 1;
    if (m === 0) {
      s = p;
      return;
    }
    p = p * interest;
    p = parseInt(p);
    calc(p, m - 1, k);
  }
  calc(p, m, k);
  while (s < d) {
    k++;
    calc(p, m, k);
  }
  return k;
}

console.log(solution(10000000, 9, 13000000));
