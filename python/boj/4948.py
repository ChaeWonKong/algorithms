"""BOJ No.4948

<베르트랑 공준>

베르트랑 공준은 임의의 자연수 n에 대하여, n보다 크고, 2n보다 작거나 같은 소수는 적어도 하나 존재한다는 내용을 담고 있다.
이 명제는 조제프 베르트랑이 1845년에 추측했고, 파프누티 체비쇼프가 1850년에 증명했다.
예를 들어, 10보다 크고, 20보다 작거나 같은 소수는 4개가 있다. (11, 13, 17, 19) 
또, 14보다 크고, 28보다 작거나 같은 소수는 3개가 있다. (17,19, 23)

n이 주어졌을 때, n보다 크고, 2n보다 작거나 같은 소수의 개수를 구하는 프로그램을 작성하시오. 


<입력>
입력은 여러 개의 테스트 케이스로 이루어져 있다. 각 케이스는 n을 포함하며, 한 줄로 이루어져 있다. (n ≤ 123456)
입력의 마지막에는 0이 주어진다.


<출력>
각 테스트 케이스에 대해서, n보다 크고, 2n보다 작거나 같은 소수의 개수를 출력한다.
"""


def sieve(n):
	"""n+1개의 인자로 구성된 리스트에 대해 각 인자의 인덱스가 소수이면 인자를 1로, 이외엔 0으로 변환시키는
	에라토스테네스의 체 알고리즘"""

	results = [1 for _ in range(n+1)]
	results[0], results[1] = 0, 0

	div = 2
	while div <= n // 2 + 1:
		for i in range(div * div, n+1, div):
			if results[i] == 0:
				continue
			else:
				results[i] = 0
		div += 1

	return results


if __name__ == "__main__":
	# 먼저 최대 입력인 2n 이하의 소수를 에라토스테네스의 체로 모두 구한다
	arr = sieve(123456*2)

	# 각 입력에 대해 n 보다 크고 2n보다 같거나 작은 소수의 개수를 구한다
	while True:
		n = int(input())
		if n == 0:
			break
		else:
			results = arr[n+1:2*n+1]
			# 인덱스가 소수인 인자만 1이고 나머지는 0이므로 리스트의 합은 소수의 개수와 같다
			print(sum(results))


